# yaml-language-server: $schema=./core-deployments.schema.json
---
description: ISM config for Nexus
timestamp: 2023-09-23T16:00:00.000Z
version:
  major: 1
  minor: 0
  patch: 0
data:
  # The list of chains to deploy ISMs onto
  chains:
    - name: mantapacific
    - name: neutron
    - name: arbitrum

  validatorSets:
    - chain: mantapacific
      validators:
        - address: '0x8e668c97ad76d0e28375275c41ece4972ab8a5bc'
          name: abacusworks
        - address: '0x521a3e6bf8d24809fde1c1fd3494a859a16f132c'
          name: cosmostation
        - address: '0x14025fe092f5f8a401dd9819704d9072196d2125'
          name: p2p
        - address: '0x25b9a0961c51e74fd83295293bc029131bf1e05a'
          name: neutron
        - address: '0xa0eE95e280D46C14921e524B075d0C341e7ad1C8'
          name: cosmos spaces
        - address: '0xcc9a0b6de7fe314bd99223687d784730a75bb957'
          name: dsrv
        - address: '0x42b6de2edbaa62c2ea2309ad85d20b3e37d38acf'
          name: sg-1
      threshold: 5
    - chain: arbitrum
      remoteRegistry:
        name: defaultRemote
        ismId: default
    - chain: neutron
      validators: 
        - address: '0xa9b8c1f4998f781f958c63cfcd1708d02f004ff0'
          name: abacusworks
        - address: '0xb65438a014fb05fbadcfe35bc6e25d372b6ba460'
          name: cosmosstation
        - address: '0x42fa752defe92459370a052b6387a87f7de9b80c'
          name: p2p
        - address: '0xc79503a3e3011535a9c60f6d21f76f59823a38bd'
          name: neutron
        - address: '0x54b2cca5091b098a1a993dec03c4d1ee9af65999'
          name: cosmos spaces
        - address: '0x47aa126e05933b95c5eb90b26e6b668d84f4b25a'
          name: dsrv
      threshold: 4

  owner:
    # This name sucks - but this indicates we want to use whatever
    # owners are specified in owners.yaml. Otherwise we'd have a ChainMap
    useGlobalConfig: true

  config:
    moduleType: routing
    routes:
      # Support receiving from all the configured chains in `data.chains`.
      # It's implied that an ISM deployed onto foochain will not be able to
      # receive messages from itself (maybe??)
      # Alternatively this could be an array of chain names.
      originChains: '*'
      moduleType: aggregation
      threshold: 1
      modules:
        - type: MerkleRootMultisig
        - type: MessageIdMultisig